#!/usr/bin/perl
# Simple network client that reads time from a remote host using daytime
# service. See http://tf.nist.gov/tf-cgi/servers.cgi for NIST time servers.
use strict;
use warnings;

use Socket;

use constant DEFAULT_ADDR   => 'wwv.nist.gov';
use constant PORT           => 13; # daytime service
# ... my $port = getservbyname('daytime', 'tcp')
use constant IPPROTO_TCP    => 6;  # TCP protocol number used by socket()
# ... my $protocol = getprotobyname('tcp') 

# Construct the destination address for the socket
my $address     = shift || DEFAULT_ADDR; # dotted-quad or symbolic hostname
my $packed_addr = inet_aton($address);   # pack address into binary form
my $destination = sockaddr_in(PORT, $packed_addr);

# Create the socket (communication endpoint) in SOCK filehandle
socket(SOCK,PF_INET,SOCK_STREAM,IPPROTO_TCP) or die "Can't make a socket: $!";
# ... PF_INET == AF_INET (Protocol/Address Family)
# Connect local socket SOCK to the remote socket
connect(SOCK,$destination)                   or die "Can't connect: $!";

# We can now treat SOCK like read/write filehandle
print readline(SOCK); # or print <SOCK>;
